## \cond
#HEADSTART##############################################################
#
#PROJECT:      UnifiedTraceAndLogManager
#AUTHOR:       Arno-Can Uestuensoez - acue.opensource@gmail.com
#MAINTAINER:   Arno-Can Uestuensoez - acue.opensource@gmail.com
#SHORT:        utalm-bash
#LICENCE:      Apache-2.0
#VERSION:      03_02_003
#
########################################################################
#
#   Copyright [2007,2008,2010,2013] Arno-Can Uestuensoez
#
#   Licensed under the Apache License, Version 2.0 (the "License");
#   you may not use this file except in compliance with the License.
#   You may obtain a copy of the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
#   Unless required by applicable law or agreed to in writing, software
#   distributed under the License is distributed on an "AS IS" BASIS,
#   WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
#   See the License for the specific language governing permissions and
#   limitations under the License.
#
#HEADEND################################################################

#***MODUL_DOXYGEN_START***
## \endcond
##
## @package libutalm_bash
## @author Arno-Can Uestuensoez
## @date 2013.10.10
## @version 03_02_001
## @file
## @brief Configuration file 
##
## \cond
#***MODUL_DOXYGEN_END***

## \endcond
#P ## @var BASE
#P # Base node.
#P BASE = "${BASH_SOURCE%/*/*}/"
## \cond
BASE=${BASH_SOURCE%/*/*}/
CLIB=${BASE}lib/core/libcore-03_01_009.sh
if [ -e "${BASE}lib" ];then
. ${CLIB}
else
BASE=${HOME}/
CLIB=${BASE}lib/core/libcore-03_01_009.sh
if [ -e "${BASE}lib" ];then
. ${CLIB}
fi
fi

function displayIt () {
	if [ "$DBG" == 1 ];then
		echo ${LINENO}:$*
	else
		if [ "$SILENT" == 0 ];then
			echo ${LINENO}:$*
		fi
	fi
}

if [ -z "$INSTROOT" ];then
	if [ -e "${BASE}bin" -a -e "${BASE}lib" ];then
		INSTROOT=${BASE}
	fi
fi
displayIt "*"

## \endcond
#P ## @var INSTROOT
#P # Base node.
#P INSTROOT="${INSTROOT:-$BASE}"
## \cond
INSTROOT=${INSTROOT:-$BASE}
if [ ! -d "$INSTROOT" ];then
	displayIt "Missing:INSTROOT=$INSTROOT"
	exit 1
fi 
displayIt "Use:INSTROOT=$INSTROOT"

## \endcond
#P ## @var BINDIR
#P # Node vcontaining binaries.
#P BINDIR="${BINDIR:-$INSTROOT/bin}"
## \cond
BINDIR="${BINDIR:-$INSTROOT/bin}"
BINDIR="${BINDIR%/}/"
if [ ! -d "$BINDIR" ];then
	displayIt "Make:BINDIR=$BINDIR"
	mkdir -p "$BINDIR"
fi 
displayIt "Use:BINDIR=$BINDIR"

## \endcond
#P ## @var LIBDIR
#P # Node containing libraries.
#P LIBDIR="${LIBDIR:-$INSTROOT/lib}"
## \cond
LIBDIR="${LIBDIR:-$INSTROOT/lib}"
LIBDIR="${LIBDIR%/}/"
if [ ! -d "$LIBDIR" ];then
	displayIt "Make:LIBDIR=$LIBDIR"
	mkdir -p "$LIBDIR"
fi 
displayIt "Use:LIBDIR=$LIBDIR"

## \endcond
#P ## @var BOOTSTRAPBIN
#P # Node containing bootstrap libraries.
#P BOOTSTRAPBIN="${BOOTSTRAPBIN:-$BINDIR/bootstrap}"
## \cond
BOOTSTRAPBIN="${BOOTSTRAPBIN:-$BINDIR/bootstrap}"
BOOTSTRAPBIN="${BOOTSTRAPBIN%/}/"
if [ ! -d "$BOOTSTRAPBIN" ];then
	displayIt "Make:BOOTSTRAPBIN=$BOOTSTRAPBIN"
	mkdir -p "$BOOTSTRAPBIN"
fi 
displayIt "Use:BOOTSTRAPBIN=$BOOTSTRAPBIN"

## \endcond
#P ## @var BOOTSTRAPLIB
#P # Node containing bootstrap libraries.
#P BOOTSTRAPLIB="${BOOTSTRAPLIB:-$LIBDIR/bootstrap}"
## \cond
BOOTSTRAPLIB="${BOOTSTRAPLIB:-$LIBDIR/bootstrap}"
BOOTSTRAPLIB="${BOOTSTRAPLIB%/}/"
if [ ! -d "$BOOTSTRAPLIB" ];then
	displayIt "Make:BOOTSTRAPLIB=$BOOTSTRAPLIB"
	mkdir -p "$BOOTSTRAPLIB"
fi 
displayIt "Use:BOOTSTRAPLIB=$BOOTSTRAPLIB"

## \endcond
#P ## @var COREBIN
#P # Node containing bootstrap libraries.
#P COREBIN="${COREBIN:-$BINDIR/core/}"
## \cond
COREBIN="${COREBIN:-$BINDIR/core/}"
COREBIN="${COREBIN%/}/"
if [ ! -d "$COREBIN" ];then
	displayIt "Make:COREBIN=$COREBIN"
	mkdir -p "$COREBIN"
fi 
displayIt "Use:COREBIN=$COREBIN"

## \endcond
#P ## @var CORELIB
#P # Node containing bootstrap libraries.
#P CORELIB="${CORELIB:-$LIBDIR/core/}"
## \cond
CORELIB="${CORELIB:-$LIBDIR/core/}"
CORELIB="${CORELIB%/}/"
if [ ! -d "$CORELIB" ];then
	displayIt "Make:CORELIB=$CORELIB"
	mkdir -p "$CORELIB"
fi 
displayIt "Use:CORELIB=$CORELIB"

## \endcond
#P ## @var MYCONFPATH
#P # Node containing bootstrap libraries.
#P MYCONFPATH="${MYCONFPATH:-$INSTROOT/conf/}"
## \cond
MYCONFPATH="${MYCONFPATH:-$INSTROOT/conf/}"
MYCONFPATH="${MYCONFPATH%/}/"
if [ ! -d "$MYCONFPATH" ];then
	displayIt "Make:MYCONFPATH=$MYCONFPATH"
	mkdir -p "$MYCONFPATH"
fi 
displayIt "Use:MYCONFPATH=$MYCONFPATH"

## \endcond
#P ## @var MYDOCBASE
#P # Node containing documents.
#P MYDOCBASE="${MYDOCBASE:-$INSTROOT/doc/}"
## \cond
MYDOCBASE="${MYDOCBASE:-$INSTROOT/doc/}"
MYDOCBASE="${MYDOCBASE%/}/"
if [ ! -d "$MYDOCBASE" ];then
	displayIt "Make:MYDOCBASE=$MYDOCBASE"
	mkdir -p "$MYDOCBASE"
fi 
displayIt "Use:MYDOCBASE=$MYDOCBASE"

## \endcond
#P ## @var MYEXAMPLES
#P # Node containing examples.
#P MYEXAMPLES="${MYEXAMPLES:-$INSTROOT/examples/}"
## \cond
MYEXAMPLES="${MYEXAMPLES:-$INSTROOT/examples/}"
MYEXAMPLES="${MYEXAMPLES%/}/"
if [ ! -d "$MYEXAMPLES" ];then
	displayIt "Make:MYEXAMPLES=$MYEXAMPLES"
	mkdir -p "$MYEXAMPLES"
fi 
displayIt "Use:MYEXAMPLES=$MYEXAMPLES"

## \endcond
#P ## @var MYTESTS
#P # Node containing tests.
#P MYTESTS="${MYTESTS:-$INSTROOT/tests/}"
## \cond
MYTESTS="${MYTESTS:-$INSTROOT/tests}"
MYTESTS="${MYTESTS%/}/"
if [ ! -d "$MYTESTS" ];then
	displayIt "Make:MYTESTS=$MYTESTS"
	mkdir -p "$MYTESTS"
fi 
displayIt "Use:MYTESTS=$MYTESTS"


## \endcond
#P ## @var PATH
#P # Extneds PATH.
#P PATH="/usr/bin:/bin:$BINDIR/bin:$PATH"
## \cond
export PATH=/usr/bin:/bin:$BINDIR/bin:$PATH

## \endcond
#P ## @var BROWSER
#P # If not set, assigns BROWSER for help.
#P BROWSER="google-chrom|firefox"
## \cond
if [ -z "$BROWSER" ];then
	BROWSER=$(which "google-chrom" 2>/dev/null)
	if [ -z "$BROWSER" ];then
		BROWSER=$(which "firefox" 2>/dev/null )
	fi
fi
displayIt "Use:BROWSER=$BROWSER"

## \endcond
#P ## @var PDFVIEWER
#P # If not set, assigns PDFVIEWER for help.
#P PDFVIEWER="epdfview|acroreader|konquerer"
## \cond
if [ -z "$PDFVIEWER" ];then
	PDFVIEWER=$(which "epdfview" 2>/dev/null)
	if [ -z "$PDFVIEWER" ];then
		PDFVIEWER=$(which "acroreader" 2>/dev/null)
		if [ -z "$PDFVIEWER" ];then
			PDFVIEWER=$(which "konquerer" 2>/dev/null)
		else
			PDFVIEWER=${BROWSER}
		fi
	fi
fi
displayIt "Use:PDFVIEWER=$PDFVIEWER"

## \endcond
#P ## @var MYLANG
#P # If not set, assigns MYLANG for help.
#P MYLANG="en"
## \cond
MYLANG=${MYLANG:-$LANG}
case ${MYLANG} in
#    de*|De*|DE*) MYLANG=de;;
    en*|En*|EN*) MYLANG=en;;
    *)           MYLANG=en;;
esac

## \endcond
#P ## @var MANPATH
#P # Extneds MANPATH.
#P MANPATH="${MYDOCBASE}/${MYLANG}/man:${MANPATH}"
## \cond
MANPATH=${MYDOCBASE}/${MYLANG}/man:${MANPATH}
displayIt "Use:MANPATH=$MANPATH"

## \endcond
#P ## @var DEFAULT_HELP
#P # Default help to be displayed.
#P DEFAULT_HELP="${MYMYDOCBASE}/${MYLANG}/html/man3/libutalm-bash.html"
#export DEFAULT_HELP="${MYDOCBASE}/${MYLANG}/html/man3/libutalm-bash.html"
export DEFAULT_HELP="${MYDOCBASE}/${MYLANG}/html/man7/libutalm-bash-API/index.html"

## \cond
MANPATH=${MYDOCBASE}/${MYLANG}/man:${MANPATH}
displayIt "Use:MANPATH=$MANPATH"

displayIt "FINISHED:install.conf"
displayIt
## \endcond
